{"version":3,"sources":["webpack:///./src/app/questions/questions.module.ts","webpack:///./src/app/questions/questions.page.html","webpack:///./src/app/questions/questions.page.scss","webpack:///./src/app/questions/questions.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEI;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBhC,woBAAwoB,QAAQ,+P;;;;;;;;;;;ACAhpB,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;ACAb;AACF;AACR;AACS;AACF;AAS/C;IAKE,uBAAmB,IAAgB,EAAS,KAAsB,EAAS,OAAgB;QAAxE,SAAI,GAAJ,IAAI,CAAY;QAAS,UAAK,GAAL,KAAK,CAAiB;QAAS,YAAO,GAAP,OAAO,CAAS;QAJ3F,UAAK,GAAG,EAEP;IAE6F,CAAC;IAEzF,gCAAQ,GAAd;;;;;;wBACE,SAAI;wBAAS,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;;wBAAhD,GAAK,KAAK,GAAG,SAAmC;;;;;KACjD;IAED,uCAAe,GAAf,cAAmB,CAAC;IAEd,gCAAQ,GAAd;;;;;4BACU,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC,SAAS,EAAC,2DAAS,EAAC,CAAC;;wBAAlD,CAAC,GAAG,SAA8C;wBACtD,qBAAM,CAAC,CAAC,OAAO,EAAE;;wBAAjB,SAAiB;wBACP,qBAAM,CAAC,CAAC,YAAY,EAAE;;wBAA5B,GAAG,GAAG,SAAsB;wBAC5B,IAAI,GAAG,GAAG,CAAC,IAAI;wBACnB,IAAI,IAAI,IAAI,IAAI;4BAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;wBACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC;;;;;KAC1C;IAED,8BAAM,GAAN,UAAO,IAAI;QACT,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC;IAC3C,CAAC;IAzBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qGAAoC;;SAErC,CAAC;+EAMyB,+DAAU,EAAgB,8DAAe,EAAkB,sDAAO;OALhF,aAAa,CA0BzB;IAAD,oBAAC;CAAA;AA1ByB","file":"questions-questions-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuestionsPage } from './questions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [QuestionsPage]\n})\nexport class QuestionsPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>\\n        问题列表\\n      </ion-title>\\n  \\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button slot=\\\"icon-only\\\" color=\\\"royal\\\" (click)=\\\"addClick()\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  \\n  </ion-header>\\n  \\n  <ion-content padding>\\n    <ion-list>\\n        <ion-item-sliding *ngFor=\\\"let item of items\\\">\\n            <ion-item button=\\\"true\\\" (click)=\\\"itemSelected(item)\\\">\\n              {{ item }}\\n            </ion-item>\\n            <ion-item-options side=\\\"end\\\">\\n              <ion-button (click)=\\\"remove(item)\\\" color=\\\"danger\\\">移除</ion-button>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n    </ion-list>\\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ucy9xdWVzdGlvbnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular'\nimport { Storage } from '@ionic/storage'\nimport { HttpClient } from \"@angular/common/http\"\nimport { TitlePage } from '../title/title.page'\nimport { API } from '../api-def'\n\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.page.html',\n  styleUrls: ['./questions.page.scss'],\n})\nexport class QuestionsPage implements OnInit {\n  items = [\n\n  ]\n\n  constructor(public http: HttpClient, public modal: ModalController, public storage: Storage) {}\n\n  async ngOnInit() {\n    this.items = await this.storage.get('questions')\n  }\n\n  ionViewDidLeave() {}\n\n  async addClick() {\n    let m = await this.modal.create({component:TitlePage})\n    await m.present()\n    let ret = await m.onDidDismiss()\n    let name = ret.data\n    if (name != null) this.items.push(name)\n    this.storage.set('questions', this.items)\n  }\n\n  remove(item) {\n    this.items.splice(this.items.indexOf(item), 1)\n    this.storage.set('questions', this.items)\n  }\n}\n"],"sourceRoot":""}